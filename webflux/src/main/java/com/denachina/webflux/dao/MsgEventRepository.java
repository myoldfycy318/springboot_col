package com.denachina.webflux.dao;import com.denachina.webflux.pojo.MsgEvent;import org.springframework.data.mongodb.repository.ReactiveMongoRepository;import org.springframework.data.mongodb.repository.Tailable;import reactor.core.publisher.Flux;/** * MsgEventRepository * * @author shanmin.zhang * @date 18/12/7 **/public interface MsgEventRepository extends ReactiveMongoRepository<MsgEvent, Long> {    /**     * Tailable仅支持有大小限制的（“capped”）collection     * <p>     * Tailable注解的作用类似于linux的tail命令，被注解的方法将发送无限流，     * 需要注解在返回值为Flux这样的多个元素的Publisher的方法上；     * 标识它会无限地发出SSE，而不会有“完成信号”出现，这是无限流     * <p>     * Tailable起作用的前提是至少有一条记录。     *     * @return flux     */    @Tailable    Flux<MsgEvent> findMsgEventsByUsername(String username);}