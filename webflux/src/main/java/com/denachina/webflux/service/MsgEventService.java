package com.denachina.webflux.service;import com.denachina.webflux.dao.MsgEventRepository;import com.denachina.webflux.pojo.MsgEvent;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import reactor.core.publisher.Flux;import reactor.core.publisher.Mono;/** * MsgEventService * * @author shanmin.zhang * @date 18/12/7 **/@Servicepublic class MsgEventService {    @Autowired    private MsgEventRepository msgEventRepository;    /**     * insert返回的是保存成功的记录的Flux，但我们不需要，使用then方法表示“忽略数据元素，只返回一个完成信号”     *     * @param msgEventFlux     * @return     */    public Mono<Void> loads(Flux<MsgEvent> msgEventFlux) {        return msgEventRepository.insert(msgEventFlux).then();    }    public Flux<MsgEvent> tailMsgEventsByUsername(String username) {        return msgEventRepository.findMsgEventsByUsername(username);    }}