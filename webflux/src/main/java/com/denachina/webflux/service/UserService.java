package com.denachina.webflux.service;import com.denachina.webflux.dao.UserRepository;import com.denachina.webflux.pojo.User;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import reactor.core.publisher.Flux;import reactor.core.publisher.Mono;/** * UserService * * @author shanmin.zhang * @date 18/12/6 **/@Servicepublic class UserService {    private Logger logger = LoggerFactory.getLogger(UserService.class);    @Autowired    private UserRepository userRepository;    /**     * 保存或更新。     * 如果传入的user没有id属性，由于username是unique的，在重复的情况下有可能报错，     * 这时找到以保存的user记录用传入的user更新它。     */    public Mono<User> save(User user) {        return userRepository.save(user)                .onErrorResume(e -> {                    logger.error("id:{}  y->", user.getId(), e);                    return userRepository.findUserByUsername(user.getUsername())                            .log()                            .flatMap(u -> {                                user.setId(u.getId());                                return userRepository.save(user);                            });                });    }    public Mono<Long> deleteByUsername(String username) {        return userRepository.deleteByUsername(username);    }    public Flux<User> findAll() {        return userRepository.findAll();    }}